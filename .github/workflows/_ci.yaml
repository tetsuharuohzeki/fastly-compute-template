# we need separate CI workflow template to achieve that a CI
# for each of PRs cancellable and one for default branch should run on every commits
# because the runner will use `concurrency.group` in the callee worfklow which is
# configured as cancellable if we don't set `concurrency.group` to caller workflow.
name: Shared CI workflow

on:
    workflow_call:
        secrets:
            # We would like to use `GITHUB_TOKEN` name.
            # But it will be an error since it would collide with system reserved name.
            gh-token:
                description: |
                    We can use `secrets.GITHUB_TOKEN` implicitly,
                    but this require to pass it explicitly to make the workflow simply.
                required: true

permissions:
    contents: read

# https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
# https://docs.github.com/en/actions/learn-github-actions/contexts
jobs:
    fetch_cargo_registry:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_to_compile

    fetch_npm_registry:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test

    build:
        needs: [fetch_cargo_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                build_type: ["debug", "release"]
                release_channel: ["canary", "production"]
            fail-fast: true
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_to_compile
            - uses: ./.github/actions/ci_prepare_fastly_cli
              with:
                  gh-token: ${{ secrets.gh-token }}

            - shell: bash
              run: make build_${{ matrix.build_type }} -j RELEASE_CHANNEL=${{ matrix.release_channel }}

            - shell: bash
              run: make package_artifacts_for_deploy -j

            - uses: ./.github/actions/upload_build_artifacts
              with:
                  git-sha: ${{ github.sha }}
                  release-channel: ${{ matrix.release_channel }}
                  build-type: ${{ matrix.build_type }}

    integration_tests:
        needs: [fetch_npm_registry, build]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                build_type: [
                        "release",
                        # We can use `debug_assert!()` or overflow check only in debug build.
                        "debug",
                    ]
                release_channel: ["canary", "production"]
            # allow to observe the difference of the result
            fail-fast: false
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/download_build_artifacts
              with:
                  git-sha: ${{ github.sha }}
                  release-channel: ${{ matrix.release_channel }}
                  build-type: ${{ matrix.build_type }}
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - uses: ./.github/actions/ci_prepare_fastly_cli
              with:
                  gh-token: ${{ secrets.gh-token }}
            - run: make run_integration_tests -j RELEASE_CHANNEL=${{ matrix.release_channel }}

    unittests:
        needs: [fetch_cargo_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_to_compile
            - shell: bash
              run: make unittests -j

    lint_check:
        needs: [fetch_cargo_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_to_compile
            - shell: bash
              run: make lint_check -j

    format_check:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Install Rust toolchain
              uses: ./.github/actions/rust_toolchain
              with:
                  toolchain: "1.87"
                  profile: default
                  override: true
                  cache: true

            - shell: bash
              run: make format_check -j

    format_check_integration_tests:
        needs: [fetch_npm_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - shell: bash
              run: make format_check_integration_tests -j

    lint_check_integration_tests:
        needs: [fetch_npm_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - shell: bash
              run: make lint_integration_tests -j

    typecheck_integration_tests:
        needs: [fetch_npm_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - shell: bash
              run: make typecheck_integration_tests -j

    sentinel:
        needs:
            # application
            - build
            - unittests
            - lint_check
            - format_check
            # integration testing
            - integration_tests
            - lint_check_integration_tests
            - format_check_integration_tests
            - typecheck_integration_tests
        runs-on: ubuntu-latest
        if: ${{ always() }}
        steps:
            - name: Check whether required jobs are successful
              if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
              # Fail this job
              run: exit 1
