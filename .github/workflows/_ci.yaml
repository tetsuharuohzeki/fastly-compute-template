name: Shared CI workflow

on:
    workflow_call:

permissions:
    contents: read

# https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
# https://docs.github.com/en/actions/learn-github-actions/contexts
jobs:
    fetch_cargo_registry:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_to_compile

    fetch_npm_registry:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test

    build:
        needs: [fetch_cargo_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                build_type: ["debug", "release"]
                release_channel: ["canary", "production"]
            fail-fast: true
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_to_compile

            - name: Set up Fastly CLI
              # https://github.com/fastly/compute-actions
              uses: fastly/compute-actions/setup@v5
              with:
                  cli_version: "10.7.0"
                  token: ${{ secrets.GITHUB_TOKEN }}

            - shell: bash
              run: make build_${{ matrix.build_type }} -j RELEASE_CHANNEL=${{ matrix.release_channel }}

            - shell: bash
              run: make package_artifacts_for_deploy -j

            - uses: ./.github/actions/upload_build_artifacts
              with:
                  git-sha: ${{ github.sha }}
                  release-channel: ${{ matrix.release_channel }}
                  build-type: ${{ matrix.build_type }}

    integration_tests:
        needs: [fetch_npm_registry, build]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                build_type: [
                        "release",
                        # We can use `debug_assert!()` or overflow check only in debug build.
                        "debug",
                    ]
                release_channel: ["canary", "production"]
            # allow to observe the difference of the result
            fail-fast: false
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/download_build_artifacts
              with:
                  git-sha: ${{ github.sha }}
                  release-channel: ${{ matrix.release_channel }}
                  build-type: ${{ matrix.build_type }}
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - name: Set up Fastly CLI
              uses: fastly/compute-actions/setup@v5
              with:
                  cli_version: "10.7.0"
                  token: ${{ secrets.GITHUB_TOKEN }}
            - run: make validate_artifacts_to_deploy -j
            - run: make run_integration_tests -j RELEASE_CHANNEL=${{ matrix.release_channel }}

    unittests:
        needs: [fetch_cargo_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_to_compile
            - shell: bash
              run: make unittests -j

    lint_check:
        needs: [fetch_cargo_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_to_compile
            - shell: bash
              run: make lint_check -j

    format_check:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4

            - name: Install Rust toolchain
              uses: ./.github/actions/rust_toolchain
              with:
                  toolchain: "1.74"
                  profile: default
                  override: true
                  cache: true

            - shell: bash
              run: make format_check -j

    format_check_integration_tests:
        needs: [fetch_npm_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - shell: bash
              run: make format_check_integration_tests -j

    lint_check_integration_tests:
        needs: [fetch_npm_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - shell: bash
              run: make lint_integration_tests -j

    typecheck_integration_tests:
        needs: [fetch_npm_registry]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci_prepare_npm_for_integration_test
            - shell: bash
              run: make typecheck_integration_tests -j
