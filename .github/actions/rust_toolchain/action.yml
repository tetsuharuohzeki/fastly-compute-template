name: Rust Toolchain Setup

# This emulates https://github.com/actions-rs/toolchain#inputs
inputs:
    toolchain:
        description: See https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
        required: false
        default: "stable"
    target:
        description: Space-separated list of target triple to be additionally installed.
        required: false
        default: null
    default:
        description: Whether to set the installed toolchain as default or not.
        required: false
        default: false
    override:
        description: Whether to override the installed toolchain to the working directory.
        required: false
        default: false
    profile:
        description: See https://rust-lang.github.io/rustup/concepts/profiles.html
        required: false
        default: "default"
    components:
        description: Space-separated list of components to be additionally installed.
        required: false
        default: null
    working-directory:
        description: The working directory.
        required: false
    cache:
        description: |
            Enable toolchains cache. This is just for workaround to API limit to download toolchains.
            We don't have a way to evict cache automatically. Please be careful if you use a channel name (e.g. `'stable'` or `'nightly'`, or) `toolchain` option.
        required: false
        default: false

runs:
    using: composite
    steps:
        - name: Look up toolchains' cache.
          id: cache-toolchain
          uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
          if: ${{ inputs.cache == 'true' }}
          with:
              path: |
                  ~/.rustup/toolchains/
                  ~/.rustup/update-hashes/
                  ~/.rustup/settings.toml
              key: rev0-rust-toolchains-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('rust-toolchain.toml') }}--toolchain:${{ inputs.toolchain }}--targets:${{ inputs.target }}--profile:${{ inputs.profile }}--components:${{ inputs.components }}
        - name: Show restored cached toolchains' information
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          run: |
             set -x
             rustup show --verbose
        - name: Clean up preinstalled 'stable' toolchain if we don't use it
          shell: bash
          if: ${{ inputs.toolchain != 'stable' }}
          working-directory: ${{ inputs.working-directory }}
          run: rustup toolchain uninstall stable
        - name: Set up toolchains.
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          run: |
              set -x
              rustup self update
              rustup set profile ${{ inputs.profile }}
              rustup toolchain install --no-self-update ${{ inputs.toolchain }}
              rustup update --no-self-update ${{ inputs.toolchain }}
        - name: Set the default toolchain.
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          if: ${{ inputs.default == 'true' }}
          run: |
              set -x
              rustup default ${{ inputs.toolchain }}
        - name: Set the toolchain override.
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          if: ${{ inputs.override == 'true' }}
          run: |
              set -x
              rustup override set ${{ inputs.toolchain }}
        - name: Install additional compile targets.
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          if: ${{ inputs.target != null && steps.cache-toolchain.outputs.cache-hit != 'true' }}
          run: |
              set -x
              rustup target add ${{ inputs.target }}
        - name: Install additional toolchain componentns.
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          if: ${{ inputs.components != null && steps.cache-toolchain.outputs.cache-hit != 'true' }}
          run: |
              set -x
              rustup component add ${{ inputs.components }}
        - name: Show the active and installed toolchains or profiles.
          shell: bash
          working-directory: ${{ inputs.working-directory }}
          run: |
              set -x
              rustup show
